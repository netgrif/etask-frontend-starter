name: Publish a release
on:
  release:
    types: [ published ]
jobs:
  publish-docker:
    name: Docker build image and publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTH_TOKEN }}

      - name: Read package.json
        uses: zvonimirsun/read-package-version-actions@v2
        id: getVersion

      - name: Push Version ${{ steps.getVersion.outputs.version }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: netgrif/etask-frontend:${{ steps.getVersion.outputs.version }}

      - name: Push Latest
        if: ${{ !contains(steps.getVersion.outputs.version, '-') }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: netgrif/etask-frontend:latest

      - name: Push Next
        if: ${{ contains(steps.getVersion.outputs.version, '-') }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: netgrif/etask-frontend:next

  publish-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Read package.json
        uses: zvonimirsun/read-package-version-actions@v2
        id: getVersion

      - name: Build
        run: |
          npm i --legacy-peer-deps
          npm run build

      - name: Build project
        run: |
          zip -r netgrif-etask-${{ steps.getVersion.outputs.version }}.zip dist/etask

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netgrif-etask-${{ steps.getVersion.outputs.version }}.zip
          asset_name: netgrif-etask-${{ steps.getVersion.outputs.version }}.zip
          tag: ${{ github.ref }}
          overwrite: true
